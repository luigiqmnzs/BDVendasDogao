/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.logging.Level;
import java.sql.Date;
import java.time.ZoneId;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.Clientes;
import model.ItensDeVendas;
import model.Produtos;
import model.Vendas;
import persistence.ClientesDAO;
import persistence.ItensDeVendasDAO;
import persistence.ProdutosDAO;
import persistence.VendasDAO;
import util.tableModel;

/**
 *
 * @author Sir Parish
 */
public class RealizarVendaUI extends javax.swing.JFrame {

    ArrayList<Produtos> carrinho;
    int contNumeroVenda = 0;
    
    
    public RealizarVendaUI() throws SQLException {
        initComponents();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        setBounds(0,0,screenSize.width, screenSize.height);
        VendasDAO dao = new VendasDAO();
        contNumeroVenda = dao.retornarAI();
        prepararTable();
        prepararTable2();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        botaoVoltar = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        botaoFinalizar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela1 = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        botaoAdicionar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabela2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.GridLayout(2, 1));

        jPanel3.setLayout(new java.awt.GridLayout(3, 3));

        botaoVoltar.setText("Voltar");
        botaoVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoVoltarActionPerformed(evt);
            }
        });
        jPanel3.add(botaoVoltar);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 219, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        jPanel3.add(jPanel12);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 219, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        jPanel3.add(jPanel10);

        botaoFinalizar.setText("Finalizar venda");
        botaoFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoFinalizarActionPerformed(evt);
            }
        });
        jPanel3.add(botaoFinalizar);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 219, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        jPanel3.add(jPanel4);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 219, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        jPanel3.add(jPanel8);

        jPanel1.add(jPanel3);

        jPanel2.setLayout(new java.awt.GridLayout(1, 3));

        tabela1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabela1);

        jPanel2.add(jScrollPane1);

        jPanel5.setLayout(new java.awt.GridLayout(3, 0));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 146, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        jPanel5.add(jPanel6);

        botaoAdicionar.setText("Adicionar");
        botaoAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAdicionarActionPerformed(evt);
            }
        });
        jPanel5.add(botaoAdicionar);

        jPanel2.add(jPanel5);

        tabela2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tabela2.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tabela2);

        jPanel2.add(jScrollPane2);

        jPanel1.add(jPanel2);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoVoltarActionPerformed
    VendasUI ui = new VendasUI();
    ui.setVisible(true);
    this.setVisible(false);
    }//GEN-LAST:event_botaoVoltarActionPerformed

    private void botaoAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAdicionarActionPerformed
    ProdutosDAO dao = new ProdutosDAO();
    int row = tabela1.getSelectedRow();
    int codigo = 0;
    if(tabela1.getSelectedRowCount() > 1 || tabela1.getSelectedRowCount() == 0){
        JOptionPane.showMessageDialog(this, "Selecione um produto por vez!");
    }else{
        try {
            for (Produtos produto : dao.listar()) {
                if(produto.getCodigoProduto() == Integer.parseInt(tabela1.getValueAt(row, 0)+"")){
                    codigo = produto.getCodigoProduto();
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(RealizarVendaUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        Produtos p = dao.buscar(codigo);
        int qntdP = Integer.parseInt(JOptionPane.showInputDialog(this, "Informe a quantidade desse produto que quer comprar:"));
        if(p.getQuantidadeEstoque() - qntdP < 0){
           JOptionPane.showMessageDialog(this, "Estoque insuficiente"); 
        }else{
            if(qntdP == 0){
                JOptionPane.showMessageDialog(this, "Produto cancelado");
            }else{
                Produtos car = new Produtos(p.getCodigoProduto(), p.getDescricaoProduto(), p.getValorCompra(), p. getValorVenda(), qntdP, p.getEstoqueMinimo());
                try {
                   carrinho.add(car); 
                } catch (Exception e) {
                    carrinho = new ArrayList<Produtos>();
                    carrinho.add(car);
                }
                RealizarVendaUI ui = null;
                try {
                    ui = new RealizarVendaUI();
                } catch (SQLException ex) {
                    Logger.getLogger(RealizarVendaUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    ui.prepararTable();
                } catch (SQLException ex) {
                    Logger.getLogger(RealizarVendaUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                ui.carrinho = this.carrinho;
                ui.atualizarTable2();
                ui.setVisible(true);
                this.setVisible(false);
            }
        }
    }
    }//GEN-LAST:event_botaoAdicionarActionPerformed

    private void botaoFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoFinalizarActionPerformed
    ProdutosDAO daoP = new ProdutosDAO();
    ItensDeVendasDAO daoItens = new ItensDeVendasDAO();
    VendasDAO daoV = new VendasDAO();
    ClientesDAO daoC = new ClientesDAO();
    double totalAPagar = 0;
    int prazoMeses = 0;
    String modoDePagar = "";
    int codigoCliente = 0;
    boolean codigoExiste = false;
    Object[] opcoes = {"Vista", "Prazo"};
    int optionPane = JOptionPane.showOptionDialog(this, "Como deseja pagar?", "" , JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null,opcoes, opcoes[0]);
    if(optionPane == JOptionPane.YES_OPTION){
        modoDePagar = "Vista";
        codigoCliente = -1;
        prazoMeses = 0;
        codigoExiste = true;
    }else{
        modoDePagar = "Prazo";
        codigoCliente = Integer.parseInt(JOptionPane.showInputDialog(this, "Informe o seu código de cliente: "));
        try {
            for (Clientes cliente : daoC.listar()) {
                if(cliente.getCodigo() == codigoCliente){
                    codigoExiste = true;
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(RealizarVendaUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    if(codigoExiste){
    if(modoDePagar.equals("Prazo")){
        prazoMeses = Integer.parseInt(JOptionPane.showInputDialog(this, "Informe a quantidade de meses que deseja no prazo(1 a 5): "));
    }
    if(prazoMeses < 0 || prazoMeses > 5){
        JOptionPane.showMessageDialog(this, "Quantidade de meses inválida!");
    }else{   
    if(JOptionPane.showConfirmDialog(this, "Finalizar venda?") == JOptionPane.YES_OPTION){
      
    Date dataAtual = new Date(System.currentTimeMillis());
    java.sql.Date sqlDate = java.sql.Date.valueOf( LocalDate.now().plusMonths(prazoMeses));

    Vendas venda = new Vendas(contNumeroVenda, dataAtual, sqlDate, modoDePagar, codigoCliente);
    daoV.inserir(venda);
    
    for (Produtos produto : carrinho) {
            //Produtos produtoAux = new Produtos(produto.getCodigoProduto(), produto.getDescricaoProduto(), produto.getValorCompra(), produto.getValorVenda(), daoP.buscar(produto.getCodigoProduto()).getQuantidadeEstoque() - produto.getQuantidadeEstoque(), produto.getEstoqueMinimo());
            //daoP.alterar(produtoAux);
            totalAPagar = totalAPagar + (produto.getQuantidadeEstoque() * produto.getValorVenda());
            ItensDeVendas i = new ItensDeVendas(produto.getQuantidadeEstoque(), produto.getValorVenda(), contNumeroVenda, produto.getCodigoProduto());
            daoItens.inserir(i);
        }  
    carrinho.clear();
    codigoExiste = false;
    JOptionPane.showMessageDialog(this, "Venda realizada com sucesso!");
    VendasUI ui = new VendasUI();
    ui.setVisible(true);
    this.setVisible(false);
    }
}
    }else{
        JOptionPane.showMessageDialog(this, "Código de cliente não encontrado!");
    }
    
    }//GEN-LAST:event_botaoFinalizarActionPerformed

    /*
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RealizarVendaUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RealizarVendaUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RealizarVendaUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RealizarVendaUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new RealizarVendaUI().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(RealizarVendaUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
public void prepararTable2(){
        tableModel model = new tableModel(0,0);
        tabela2.setModel(model);
        model.addColumn("Código");
        model.addColumn("Nome");
        model.addColumn("Valor de venda");
        model.addColumn("No Carrinho");
        model.isCellEditable(1, 1);
}   
public void atualizarTable2(){
        tableModel model = new tableModel(0,0);
        tabela2.setModel(model);
        model.addColumn("Código");
        model.addColumn("Nome");
        model.addColumn("Valor de venda");
        model.addColumn("No Carrinho");
        model.isCellEditable(1, 1);
        for(Produtos produto : this.carrinho) {
            String[] grupoAux = {produto.getCodigoProduto()+"",produto.getDescricaoProduto(), produto.getValorVenda()+"",produto.getQuantidadeEstoque()+""};
            model.addRow(grupoAux);
        }
}   


public void prepararTable() throws SQLException{
        ProdutosDAO dao = new ProdutosDAO();
        tableModel model = new tableModel(0,0);
        tabela1.setModel(model);
        model.addColumn("Código");
        model.addColumn("Nome");
        model.addColumn("Valor de venda");
        model.addColumn("Quantidade no estoque");
        model.isCellEditable(1, 1);
        for(Produtos produto : dao.listar()) {
            String[] grupoAux = {produto.getCodigoProduto()+"",produto.getDescricaoProduto(), produto.getValorVenda()+"",produto.getQuantidadeEstoque()+""};
            model.addRow(grupoAux);
        }
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoAdicionar;
    private javax.swing.JButton botaoFinalizar;
    private javax.swing.JButton botaoVoltar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabela1;
    private javax.swing.JTable tabela2;
    // End of variables declaration//GEN-END:variables
}
